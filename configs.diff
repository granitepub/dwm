--- config.h	2019-06-14 03:32:35.956520925 -0500
+++ /home/logan/Dropbox/myConfigs/config.h_dwm_master	2019-06-14 03:17:23.033228074 -0500
@@ -2,26 +2,27 @@
 
 /* appearance */
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
-static const unsigned int gappx     = 5;        /* gaps between windows */
+static const unsigned int gappx     = 15;        /* gaps between windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
-static char normbgcolor[]       = "#222222";
+static const char *fonts[]          = { "monospace:size=12" };
+static const char dmenufont[]       = "monospace:size=12";
+static char normbgcolor[]           = "#222222";
 static char normbordercolor[]       = "#444444";
-static char normfgcolor[]       = "#bbbbbb";
-static char selfgcolor[]       = "#eeeeee";
+static char normfgcolor[]           = "#bbbbbb";
+static char selfgcolor[]            = "#eeeeee";
 static char selbordercolor[]        = "#005577";
-static char selbgcolor[]        = "#005577";
-static char *colors[][3]      = {
+static char selbgcolor[]            = "#005577";
+static char *colors[][3]            = {
        /*               fg           bg           border   */
        [SchemeNorm] = { normfgcolor, normbgcolor, normbordercolor },
-       [SchemeSel]  = { selfgcolor,  selbgcolor,  selbordercolor  },
+       [SchemeSel]  = { normfgcolor,  normbgcolor,  selbordercolor  },
 };
 
+
 /* Xresources file location */
-static const char *xres = "/home/USERNAME/.Xresources";
+static const char *xres = "/home/logan/.Xresources";
 
 /* tagging */
 static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
@@ -46,8 +47,6 @@
 	{ "[]=",      tile },    /* first entry is default */
 	{ "><>",      NULL },    /* no layout function means floating behavior */
 	{ "[M]",      monocle },
-	{ "|M|",      centeredmaster },
-	{ ">M>",      centeredfloatingmaster },
 };
 
 /* key definitions */
@@ -65,26 +64,50 @@
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbordercolor, "-sf", selfgcolor, NULL };
 static const char *termcmd[]  = { "st", NULL };
+static const char *rofi[] = { "rofi", "-show", "drun", "-yoffset", "22", "-location", "1", "-width", "560", "-columns", "2", "-show-icons", NULL };
+/*static const char *rofi[] = { "rofi", "-show", "drun", NULL };*/
+
+/*==============================================================================================================*/
+/*examples of what's possible*/
+/*==============================================================================================================*/
+/*static char dmenumon[2] = "0"; *//* component of dmenucmd, manipulated in spawn() */
+/*static const char *dmenucmd[] =   { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbgcolor, "-sf", selfgcolor, NULL };*/
+/*static const char *termcmd[]  =   { "terminal", NULL };*/
+/*static const char *ffox[]  =       { "firefox", NULL };*/
+/*static const char *file[]  =       { "rox", NULL };*/
+/*static const char *vlc[]  =       { "vlc", NULL };*/
+/*static const char *telegram[]  =  { "telegram-desktop", NULL };*/
+/*static const char *rofi[] =        { "rofi", "-show", "drun", "-yoffset", "15", "-location", "1", "-width", "560", "-columns", "2", "-show-icons", NULL };*/
+/*static const char *nwmgr[] =      { "/home/void/.dwm/networkmanager_dmenu", NULL };*/
+/*static const char *sessmgr[] =    { "/home/void/.dwm/Session-manager", NULL };*/
+/*static const char *sterm[] =      { "smart-terminal", NULL };*/
+/*static const char *vup[] =        { "pactl", "set-sink-volume", "0", "+5%", NULL };*/
+/*static const char *vdown[] =      { "pactl", "set-sink-volume", "0", "-5%", NULL };*/
+/*static const char *vmute[] =      { "pactl", "set-sink-mute", "0", NULL };*/
+/*static const char *gcal[] =       { "gsimplecal", NULL };*/
+/*static const char *mscrot[] =     { "mate-screenshot", NULL };*/
+/*static const char *smart[] =      { "smart-terminal", NULL };*/
+/*static const char *leafpad[] =    { "leafpad", NULL };*/
+/*static const char *reload[] = { "reload", NULL };*/
+/*static Key keys[] = {*/
 
-static Key keys[] = {
-	/* modifier                     key        function        argument */
+    /* modifier                     key        function        argument */
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
-	{ MODKEY,                       XK_b,      togglebar,      {0} },
+	{ MODKEY,                       XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_z,      spawn,          {.v = rofi } },
+        { MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
 	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
 	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
+	{ MODKEY|ShiftMask,                        XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
+	{ MODKEY|ShiftMask,             XK_q,      killclient,     {0} },
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_u,      setlayout,      {.v = &layouts[3]} },
-	{ MODKEY,                       XK_o,      setlayout,      {.v = &layouts[4]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
@@ -93,8 +116,8 @@
 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
 	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
-	{ MODKEY,                       XK_minus,  setgaps,        {.i = -1 } },
-	{ MODKEY,                       XK_equal,  setgaps,        {.i = +1 } },
+	{ MODKEY,                       XK_minus,  setgaps,        {.i = -3 } },
+	{ MODKEY,                       XK_equal,  setgaps,        {.i = +3 } },
 	{ MODKEY|ShiftMask,             XK_equal,  setgaps,        {.i = 0  } },
         { MODKEY,                       XK_F5,     xrdb,           {.v = NULL } },
 	TAGKEYS(                        XK_1,                      0)
@@ -106,8 +129,8 @@
 	TAGKEYS(                        XK_7,                      6)
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
-	{ MODKEY|ControlMask|ShiftMask, XK_q,      quit,           {1} }, 
+	{ MODKEY|ControlMask|ShiftMask, XK_q,      quit,           {0} },
+	{ MODKEY|ShiftMask,             XK_r,      quit,           {1} }, 
 };
 
 /* button definitions */
